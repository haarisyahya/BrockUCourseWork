package Assignment3;
public class Mergesort {
    public static int[] mergesort(int[] a){
        int[] tmp = new int[a.length];
        mergesort(a, tmp, 0, a.length - 1);
        return a;
    }

    public static void mergesort(int[] a, int[] tmp, int left, int right){
        if(left < right){
            int center  = (left+right)/2;
            mergesort(a, tmp, left, center);
            mergesort(a, tmp, center + 1,right);
            merge(a, tmp, left, center + 1, right);
        }
    }

    public static void merge(int[] a, int[] tmp, int lefttail, int righttail, int rightEnd){
        int leftEnd = righttail - 1;
        int tmpPos = lefttail;
        int numElements = rightEnd - lefttail + 1;

        while(lefttail <= leftEnd && righttail <= rightEnd){
            if(a[lefttail]<(a[righttail]))
                tmp[tmpPos++] = a[lefttail++];
            else
                tmp[tmpPos++] = a[righttail++];
        }

        while(lefttail <= leftEnd)
            tmp[tmpPos++] = a[lefttail++];
        while(righttail <= rightEnd)
            tmp[tmpPos++] = a[righttail++];

        for(int i = 0; i < numElements; i++, rightEnd--)
            a[rightEnd] = tmp[rightEnd];
    }
}